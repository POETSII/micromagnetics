<?xml version="1.0"?>
<!--
This XML is a template that describes two-dimensional micromagnetic simulation,
which may have been populated.

{{f:preamble.txt}}-->

<Graphs xmlns="" appname="micromagnetic_simulation_2d">
  <GraphType id="micromagnetic_simulation_2d_type">
    <MessageTypes>
      <MessageType id="state"><![CDATA[
{{f:msg_state.c}}
      ]]></MessageType>
      <MessageType id="exfiltration"><![CDATA[
{{f:msg_exfiltration_2d.c}}
      ]]></MessageType>
      <MessageType id="timer"><![CDATA[
{{f:msg_timer.c}}
      ]]></MessageType>
    </MessageTypes>
    <DeviceTypes>
      <DeviceType id="fd_point">
        <Properties><![CDATA[
{{f:fd_point_properties_2d.c}}
        ]]></Properties>
        <State><![CDATA[
{{f:fd_point_state_2d.c}}
        ]]></State>

        <ReadyToSend><![CDATA[
{{f:fd_point_rts.c}}
        ]]></ReadyToSend>

        <OnCompute><![CDATA[
{{f:fd_point_on_compute.c}}
        ]]></OnCompute>

        <!-- Getting the word out to our neighbours. -->
        <OutputPin name="state_push" messageTypeId="state">
          <OnSend><![CDATA[
{{f:populate_state_message.c}}
          ]]></OnSend>
        </OutputPin>

        <!-- Getting the word out to the supervisor. -->
        <OutputPin name="exfiltrate" messageTypeId="exfiltration">
          <OnSend><![CDATA[
{{f:populate_exfiltration_message_2d.c}}
          ]]></OnSend>
        </OutputPin>

        <!-- Supervisor timing (only device zero for now). -->
        <OutputPin name="starttimer" messageTypeId="timer">
          <OnSend><![CDATA[
{{f:populate_timer_message.c}}
          ]]></OnSend>
        </OutputPin>

        <!-- Receiving the word from our neighbours. -->
        <InputPin name="state_recv_x0plus" messageTypeId="state">
          <OnReceive><![CDATA[
{{f:fd_point_recv_x0plus.c}}
{{f:check_increment_state_2d.c}}
          ]]></OnReceive>
        </InputPin>

        <InputPin name="state_recv_x0minus" messageTypeId="state">
          <OnReceive><![CDATA[
{{f:fd_point_recv_x0minus.c}}
{{f:check_increment_state_2d.c}}
          ]]></OnReceive>
        </InputPin>

        <InputPin name="state_recv_x1plus" messageTypeId="state">
          <OnReceive><![CDATA[
{{f:fd_point_recv_x1plus.c}}
{{f:check_increment_state_2d.c}}
          ]]></OnReceive>
        </InputPin>

        <InputPin name="state_recv_x1minus" messageTypeId="state">
          <OnReceive><![CDATA[
{{f:fd_point_recv_x1minus.c}}
{{f:check_increment_state_2d.c}}
          ]]></OnReceive>
        </InputPin>
      </DeviceType>

      <SupervisorDeviceType id="supervisor">
        <Code><![CDATA[
{{f:super_code.c}}
        ]]></Code>
        <InputPin name="starttimer" messageTypeId="timer">
          <State>
            <!-- We start timing when the first message is received from a
                 compute device.
            -->
            <Scalar type="uint8_t" name="hasTimerStarted" default="0"/>
          </State>
          <OnReceive><![CDATA[
{{f:super_recv_starttimer.c}}
          ]]></OnReceive>
        </InputPin>
        <InputPin name="exfiltrate" messageTypeId="exfiltration">
          <Properties>
            <!-- Devices will continue to compute until forcefully stopped.
                 We're interested in "stopping" the simulation when simulated
                 time reaches a certain value (or specifically, when the
                 iteration counter reaches a certain value). These properties
                 are defined by the generator.

                  - nodeCount: Number of runners to expect.
                  - finishLine: Where the finish line is (how many iterations)
            -->
            <Scalar type="uint32_t" name="nodeCount"
                    default="{{v:node_count}}"/>
            <Scalar type="uint32_t" name="finishLine"
                    default="{{v:final_iteration}}"/>
          </Properties>
          <State>
            <!-- We stop timing when the last device crosses the finish line.
            -->
            <Scalar type="uint32_t" name="nodesFinished" default="0"/>
          </State>
          <OnReceive><![CDATA[
{{f:super_recv_exfiltration_2d.c}}
          ]]></OnReceive>
        </InputPin>
      </SupervisorDeviceType>
    </DeviceTypes>
  </GraphType>
{{f:instances/graph_instance.xml}}
</Graphs>
